[{"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reportWebVitals.js":"1","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\stylesheets\\theme.js":"2","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\store\\Store.js":"3","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\App.jsx":"4","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\index.jsx":"5","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\Router.jsx":"6","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\RootReducer.js":"7","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\containers\\Home.jsx":"8","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\UpsReducers.js":"9","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\UpsActions.js":"10","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\util\\AxiosUtil.js":"11","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\UspsReducers.js":"12","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\UspsActions.js":"13","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\DhlReducers.js":"14","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\DhlActions.js":"15","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\FedexReducers.js":"16","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\FedexActions.js":"17","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\components\\Snackbar.jsx":"18","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\SnackbarActions.js":"19","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\SnackbarReducers.js":"20","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\aws-exports.js":"21","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\TrackingActions.js":"22","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\graphql\\queries.js":"23","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\TrackingReducers.js":"24","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\graphql\\mutations.js":"25","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\components\\Row.jsx":"26","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\components\\InputButton.jsx":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"29"},{"size":246,"mtime":1608268470133,"results":"30","hashOfConfig":"29"},{"size":833,"mtime":1612641205052,"results":"31","hashOfConfig":"29"},{"size":553,"mtime":1613086711587,"results":"32","hashOfConfig":"29"},{"size":605,"mtime":1611838036241,"results":"33","hashOfConfig":"29"},{"size":845,"mtime":1613086930223,"results":"34","hashOfConfig":"29"},{"size":460,"mtime":1612034913665,"results":"35","hashOfConfig":"29"},{"size":11622,"mtime":1613340308948,"results":"36","hashOfConfig":"29"},{"size":3185,"mtime":1612645824441,"results":"37","hashOfConfig":"29"},{"size":1110,"mtime":1609033985355,"results":"38","hashOfConfig":"29"},{"size":884,"mtime":1609037415989,"results":"39","hashOfConfig":"29"},{"size":1851,"mtime":1612202279676,"results":"40","hashOfConfig":"29"},{"size":1290,"mtime":1608625031007,"results":"41","hashOfConfig":"29"},{"size":1035,"mtime":1608869668154,"results":"42","hashOfConfig":"29"},{"size":1099,"mtime":1608789537507,"results":"43","hashOfConfig":"29"},{"size":1059,"mtime":1608869649168,"results":"44","hashOfConfig":"29"},{"size":1128,"mtime":1608889333930,"results":"45","hashOfConfig":"29"},{"size":3080,"mtime":1611248867186,"results":"46","hashOfConfig":"29"},{"size":1135,"mtime":1611243776906,"results":"47","hashOfConfig":"29"},{"size":1222,"mtime":1611243778041,"results":"48","hashOfConfig":"29"},{"size":691,"mtime":1612460357627,"results":"49","hashOfConfig":"29"},{"size":4864,"mtime":1612627737259,"results":"50","hashOfConfig":"29"},{"size":428,"mtime":1613078458834,"results":"51","hashOfConfig":"29"},{"size":3576,"mtime":1612477148113,"results":"52","hashOfConfig":"29"},{"size":1164,"mtime":1612627146289,"results":"53","hashOfConfig":"29"},{"size":4546,"mtime":1613170121423,"results":"54","hashOfConfig":"29"},{"size":1136,"mtime":1613298271804,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1mxchas",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reportWebVitals.js",[],["120","121"],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\stylesheets\\theme.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\store\\Store.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\App.jsx",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\index.jsx",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\Router.jsx",["122","123"],"import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { AmplifyAuthenticator, AmplifySignOut, AmplifySignIn, AmplifySignUp, withAuthenticator, } from '@aws-amplify/ui-react'\r\nimport Home from './containers/Home.jsx';\r\n\r\nconst Router = () => (\r\n    <AmplifyAuthenticator>\r\n    <AmplifySignIn headerText=\"Deliveries.dev\" slot=\"sign-in\" />\r\n    <AmplifySignUp headerText=\"Deliveries.dev\" slot=\"sign-up\" \r\n     formFields={[\r\n        { type: \"username\" ,\r\n          label:\"Email Address*\"  ,\r\n          placeholder: \"Enter your email\"},\r\n        {\r\n         type: \"password\",\r\n         label: \"Password *\",\r\n         placeholder: \"Password\"\r\n       },\r\n     ]} />\r\n        <Switch>\r\n            <Route path='/' exact component={Home} />  \r\n        </Switch>\r\n    </AmplifyAuthenticator>\r\n);\r\n\r\nexport default Router; ","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\RootReducer.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\containers\\Home.jsx",["124","125","126","127","128","129","130","131"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\r\nimport { pullAt, } from 'lodash';\r\nimport { AmplifySignOut } from '@aws-amplify/ui-react'\r\n\r\n\r\n/*\r\ncurrent bugs=\r\nif both usps, it duplicate sends,\r\n\r\nif usps one ups other, only shows one\r\n\r\n*/\r\nimport {makeStyles,\r\n        Grid, \r\n        TextField,\r\n        Button,\r\n        Table, \r\n        TableContainer, \r\n        TableHead, \r\n        TableRow, \r\n        TableCell, \r\n        TableBody, \r\n        Paper, } from '@material-ui/core';\r\n\r\nimport Row from '../components/Row';\r\nimport Snackbar from '../components/Snackbar';\r\nimport InputButton from '../components/InputButton';\r\n\r\n//actions\r\nimport { deleteTracking, createTracking, getTracking, updateTracking } from '../actions/TrackingActions';\r\nimport { getUpsTracking } from '../actions/UpsActions';\r\nimport { getUspsTracking } from '../actions/UspsActions';\r\nimport { showInfoSnackbar, showErrorSnackbar } from '../actions/SnackbarActions';\r\n\r\nlet ups_regex_pattern=[\r\n  '^(1Z)[0-9A-Z]{16}$',\r\n  '^(T)+[0-9A-Z]{10}$',\r\n  '^[0-9]{9}$',\r\n  '^[0-9]{26}$'\r\n];\r\n\r\nlet usps_regex_pattern=[\r\n  '^(94|93|92|94|95)[0-9]{20}$',\r\n  '^(94|93|92|94|95)[0-9]{22}$',\r\n  '^(70|14|23|03)[0-9]{14}$',\r\n  '^(M0|82)[0-9]{8}$',\r\n  '^([A-Z]{2})[0-9]{9}([A-Z]{2})$'\r\n];\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  homeContainer: {\r\n    margin: 'auto',\r\n    textAlign: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#1E90FF',\r\n  },\r\n  title:{\r\n    // diplay: 'inline-block',\r\n    color: 'white',\r\n  },\r\n  signOut:{\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    diplay: 'inline-block',\r\n  },\r\n  inputField:{\r\n    diplay: 'inline-block',\r\n  },\r\n  submitButton:{\r\n    diplay: 'inline-block',\r\n  },\r\n  searchInput:{\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  tableContainer:{\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n}));\r\n\r\nconst usePrevious = (value) => {\r\n  const ref = useRef();\r\n\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n  \r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { trackingNumberStore, \r\n            createTrackingSucceededResponse,\r\n            uspsLastAdded ,\r\n            upsLastAdded } = useSelector((state)=> ({\r\n        trackingNumberStore: state.trackingReducers.trackingNumbers, \r\n        createTrackingSucceededResponse:state.trackingReducers.createTrackingSucceededResponse,\r\n        uspsLastAdded: state.uspsReducers.uspsLastAdded,\r\n        upsLastAdded: state.upsReducers.upsLastAdded, \r\n      }), shallowEqual);\r\n   \r\n    const [textInput, setTextInput] = useState('');\r\n    const [trackingNumberList, setTrackingNumberList] = useState([]);\r\n    const [lastAdded, setLastAdded] = useState({\r\n                                                  carrier: '',\r\n                                                  trackingNumber:'',\r\n                                                });\r\n\r\n    const [testState1, setTest1] = useState('yo');\r\n\r\n    let userId = window.localStorage.getItem(process.env.REACT_APP_AWS_USER_ID_STORAGE_KEY);\r\n\r\n    //useEffects to pull data from graphQL backend\r\n    useEffect(()=>{\r\n      dispatch(getTracking(userId));\r\n    }, []);\r\n    \r\n    useEffect(()=>{\r\n      if(trackingNumberStore){\r\n\r\n        let reduxToState = [];\r\n        for(let i = 0; i< trackingNumberStore.length; i++){\r\n          let item = trackingNumberStore[i];\r\n          let addedTracking = {\r\n            id: item.id,\r\n            carrier: item.carrier,\r\n            trackingNumber: item.trackingNumber,\r\n            trackingSummary: item.trackingSummary,\r\n            userNotes: item.userNotes,\r\n          }  \r\n          setLastAdded({ carrier : addedTracking.carrier, trackingNumber : addedTracking.trackingNumber});\r\n          reduxToState.push(addedTracking);\r\n\r\n          switch(addedTracking.carrier){\r\n            case 'UPS':\r\n               dispatch(getUpsTracking(addedTracking.trackingNumber));\r\n              break;\r\n              //propery length error for usps only wtf\r\n            case 'USPS':\r\n               dispatch(getUspsTracking(addedTracking.trackingNumber));\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n        setTrackingNumberList(reduxToState);\r\n\r\n      }\r\n    }, [trackingNumberStore]);\r\n\r\n    //useEffect when a response is recieved from USPS/UPS APIs\r\n    useEffect(()=>{\r\n      if(upsLastAdded.carrier  || uspsLastAdded.carrier ){\r\n        //link both of these into one reducer?\r\n        let lastAddedTrackingNumber;\r\n        switch(lastAdded.carrier){ \r\n          case 'UPS':\r\n            lastAddedTrackingNumber={\r\n                                      carrier:upsLastAdded.carrier,\r\n                                      trackingNumber:upsLastAdded.trackingNumber || lastAdded.trackingNumber,\r\n                                      trackingSummary: upsLastAdded.trackingSummary,\r\n                                      \r\n                                    }                       \r\n            break;\r\n          case 'USPS':\r\n            lastAddedTrackingNumber={\r\n                                      carrier:uspsLastAdded.carrier,\r\n                                      trackingNumber:uspsLastAdded.trackingNumber || lastAdded.trackingNumber,\r\n                                      trackingSummary: uspsLastAdded.trackingSummary,\r\n                      \r\n                                    }                                \r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        setTextInput('');\r\n        \r\n\r\n        if(lastAddedTrackingNumber){  \r\n          let indexInLocalState = trackingNumberList.findIndex(item => item.trackingNumber === lastAddedTrackingNumber.trackingNumber);\r\n          if(indexInLocalState <= -1 ){\r\n            setTest1('creates')\r\n            dispatch(createTracking(userId, \r\n            lastAddedTrackingNumber.carrier, \r\n            lastAddedTrackingNumber.trackingNumber, \r\n            lastAddedTrackingNumber.trackingSummary,))\r\n            setLastAdded({ carrier : '', trackingNumber: ''});\r\n            return setTrackingNumberList([lastAddedTrackingNumber, ...trackingNumberList,]);\r\n          }\r\n          else {\r\n            //updates but not for entire array, only last one??\r\n            let index = trackingNumberList.findIndex(item => item.trackingNumber === lastAddedTrackingNumber.trackingNumber)\r\n            if(trackingNumberList[index].trackingSummary.length !== lastAddedTrackingNumber.trackingSummary.length){\r\n              dispatch(updateTracking(trackingNumberList[index].id, lastAddedTrackingNumber.trackingSummary, lastAddedTrackingNumber.userNotes));\r\n              let trackingNumberListCopy = [...trackingNumberList];\r\n              let trackingNumberCopy = {...trackingNumberList[indexInLocalState], \r\n                trackingSummary: lastAddedTrackingNumber.trackingSummary,\r\n                };\r\n              trackingNumberListCopy[indexInLocalState] = trackingNumberCopy;\r\n              return setTrackingNumberList(trackingNumberListCopy);\r\n            }\r\n            setTest1('no update')\r\n          }\r\n        }\r\n      }\r\n    }, [upsLastAdded, uspsLastAdded]); \r\n\r\n    //on creation of a new tracking Number, append a new id\r\n    useEffect(()=>{\r\n      if(createTrackingSucceededResponse){\r\n        //when implementing sorting, trackingNumberList[0] should be changed if the item is to be placed in correct sort order\r\n        let trackingNumberListCopy = [...trackingNumberList];\r\n        let trackingNumberCopy = {...trackingNumberList[0], id: createTrackingSucceededResponse,};\r\n        trackingNumberListCopy[0] = trackingNumberCopy\r\n        setTrackingNumberList(trackingNumberListCopy);\r\n      }\r\n    }, [createTrackingSucceededResponse]);\r\n    \r\n    const findTracking = (e) => {\r\n      e.preventDefault();\r\n\r\n      if(textInput === ''){\r\n        dispatch(showErrorSnackbar('No tracking number entered.'));\r\n      } else if(trackingNumberList.find(item => item.trackingNumber === textInput)){\r\n        dispatch(showErrorSnackbar(\"You've already entered this number! Please enter a new tracking number.\"));\r\n      } else {\r\n        // UPS examples\r\n        //1Z5338FF0107231059 -not found -- need way to display error if tracking not found\r\n        //1Z75AR481395060710 -works\r\n\r\n        // USPS examples\r\n        // 9405509202348003831398 -works\r\n\r\n        const match = (pattern) => {\r\n          const regex = new RegExp(pattern);\r\n          return regex.test(textInput);\r\n        };\r\n\r\n        if(ups_regex_pattern.some(match)){\r\n          setLastAdded({ carrier : 'UPS', trackingNumber: textInput});\r\n          dispatch(getUpsTracking(textInput));\r\n          dispatch(showInfoSnackbar('Tracking added!'));\r\n        }\r\n\r\n        else if(usps_regex_pattern.some(match)){\r\n            setLastAdded({ carrier : 'USPS', trackingNumber: textInput});\r\n            dispatch(getUspsTracking(textInput));\r\n            dispatch(showInfoSnackbar('Tracking added!'));\r\n        }\r\n\r\n        else{\r\n          dispatch(showErrorSnackbar('This tracking number pattern does not match any of the provided carriers.'));\r\n        }\r\n\r\n        \r\n      }\r\n    };\r\n\r\n\r\n    const handleDelete = (id, index) => {\r\n      dispatch(deleteTracking(id))\r\n      let trackingNumberListCopy = [...trackingNumberList];\r\n      pullAt(trackingNumberListCopy, [index]);\r\n      setTrackingNumberList(trackingNumberListCopy);\r\n    } \r\n\r\n    return (\r\n    <div className={classes.homeContainer} >\r\n      \r\n      <div className={classes.title}>\r\n        <h1>Deliveries.dev</h1> \r\n      </div> \r\n     \r\n      <div item xs className={classes.signOut}>\r\n        <AmplifySignOut />\r\n      </div>\r\n      <Grid container direction=\"column\" spacing={4}>\r\n      <Grid item className={classes.searchInput} >\r\n          <InputButton onInputChange={e => setTextInput(e.target.value)} onIconClick={e => findTracking(e)}/>\r\n          {/* <TextField \r\n            variant=\"outlined\" \r\n            label='Tracking Number' \r\n            placeholder='Input tracking number here!' \r\n            value={textInput}\r\n            onChange={e => setTextInput(e.target.value)}\r\n            className={classes.inputField}\r\n          />\r\n          <br/>\r\n          <Button className={classes.submitButton} variant=\"contained\" color=\"primary\" onClick={findTracking}>\r\n            Track Package!\r\n          </Button> */}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TableContainer className={classes.tableContainer} component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell/>\r\n                <TableCell>Carrier</TableCell>\r\n                <TableCell>Tracking Number</TableCell>\r\n                <TableCell>Tracking Summary</TableCell>\r\n                <TableCell>User Notes</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {trackingNumberList.length > 0? \r\n                trackingNumberList.map((row, index) => (<Row key={row.trackingNumber} row={row} index={index} handleDelete={(e)=>handleDelete(row.id, index, e)}/>)) \r\n                : <TableRow/>}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      \r\n      </Grid>   \r\n      <Snackbar/>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\UpsReducers.js",["132"],"import { isEmpty } from 'lodash';\r\n\r\nimport {\r\n    GET_UPS_TRACKING_STARTED,\r\n    GET_UPS_TRACKING_SUCCEEDED,\r\n    GET_UPS_TRACKING_FAILED,\r\n  } from '../actions/UpsActions';\r\n\r\n  const defaultState = {\r\n   upsTracking: [],\r\n   upsLastAdded: {},\r\n  };\r\n\r\n  const UpsReducer = (state = defaultState, action) => {\r\n    Object.freeze(state);\r\n    let newState;\r\n    switch (action.type) {\r\n      case  GET_UPS_TRACKING_STARTED:\r\n        newState = {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n        return newState;\r\n      case GET_UPS_TRACKING_SUCCEEDED:\r\n        let data = action.response.data;\r\n        let currentTracking = data.trackResponse.shipment[0].hasOwnProperty('warnings') ? \r\n          {\r\n            carrier:'UPS',\r\n            trackingNumber: '', //should this have the error id?\r\n            trackingSummary: [data.trackResponse.shipment[0].warnings[0].message, ],\r\n          } \r\n          :\r\n          {\r\n            carrier: 'UPS',\r\n            trackingNumber: data.trackResponse.shipment[0].package[0].trackingNumber, \r\n          // trackingSummary:  data.trackResponse.shipment[0].hasOwnProperty('package') ? `${data.trackResponse.shipment[0].package[0].activity[0].status.description + ' at ' +\r\n          //                   data.trackResponse.shipment[0].package[0].activity[0].location.address.city +  ', ' + \r\n          //                   data.trackResponse.shipment[0].package[0].activity[0].location.address.stateProvince}` : 'not found',\r\n            trackingSummary: data.trackResponse.shipment[0].package[0].activity.map(activity => {\r\n                                                                                                  let status = activity.status.description;\r\n                                                                                                  let date =`${activity.date? ' ' : ''}` + activity.date + \r\n                                                                                                            `${activity.time? ', ' : ''}` + activity.time; \r\n                                                                                                  let location =`${activity.location.address.city? ', ' : ''}` + activity.location.address.city + \r\n                                                                                                                `${activity.location.address.stateProvince? ', ' : ''}` + activity.location.address.stateProvince;\r\n                                                                                                  return status + date + location;\r\n                                                                                                }),\r\n          }\r\n        newState = {\r\n          ...state,\r\n          isLoading: false,\r\n          upsTracking: [...state.upsTracking, currentTracking],\r\n          upsLastAdded: currentTracking,\r\n        };\r\n        return newState;\r\n      case  GET_UPS_TRACKING_FAILED:\r\n        newState = {\r\n          ...state,\r\n          isLoading: false,\r\n          error: action.message,\r\n        };\r\n        return newState;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  \r\n  export default UpsReducer;","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\UpsActions.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\util\\AxiosUtil.js",["133","134"],"import axios from 'axios';\r\n\r\nconst upsKey = process.env.REACT_APP_UPS_API_KEY;\r\nconst upsUsername = process.env.REACT_APP_UPS_USERNAME;\r\nconst upsPassword = process.env.REACT_APP_UPS_PASSWORD;\r\n\r\n//need instance for json and xml\r\nconst Instance = {\r\n  axiosInstance(contentType = 'application/json') {\r\n    const instance = axios.create({\r\n      timeout: 15000,\r\n      headers: this.getHeader(contentType),\r\n    });\r\n    return instance;\r\n  },\r\n  getHeader(contentType = 'application/json') {\r\n    const API_HEADER = {\r\n      'Content-Type': contentType,\r\n      // 'DHL-API-Key': process.env.REACT_APP_DHL_API_USERNAME,\r\n      'transId': '12345',\r\n      'transactionSrc': 'MailTracker',\r\n      'AccessLicenseNumber': `${upsKey}`,\r\n      // 'Username': `${upsUsername}`,\r\n      // 'Password': `${upsPassword}`,\r\n\r\n    };\r\n    return API_HEADER;\r\n  },\r\n};\r\n\r\nexport default Instance;\r\n","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\UspsReducers.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\UspsActions.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\DhlReducers.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\DhlActions.js",["135"],"import Instance from '../util/AxiosUtil';\r\n\r\nexport const GET_DHL_TRACKING_STARTED = 'GET_DHL_TRACKING_STARTED';\r\nexport const GET_DHL_TRACKING_SUCCEEDED = 'GET_DHL_TRACKING_SUCCEEDED';\r\nexport const GET_DHL_TRACKING_FAILED = 'GET_DHL_TRACKING_FAILED';\r\n\r\nconst API_KEY = process.env.REACT_APP_DHL_API_USERNAME;\r\nconst dhlUrl ='api.dhl.com/dgff/transportation'\r\n\r\nconst onGetDhlTrackingStarted = () => ({\r\n  type: GET_DHL_TRACKING_STARTED,\r\n});\r\n\r\nconst onGetDhlTrackingSucceeded = response => ({\r\n  type: GET_DHL_TRACKING_SUCCEEDED,\r\n  response,\r\n});\r\n\r\nconst onGetDhlTrackingFailed = error => ({\r\n  type: GET_DHL_TRACKING_FAILED,\r\n  error,\r\n});\r\n\r\nexport const getDhlTracking = () => (dispatch) => {\r\n    dispatch(onGetDhlTrackingStarted());\r\n    return Instance.axiosInstance().get(dhlUrl+'/shipment-tracking')\r\n      .then((response) => {\r\n        dispatch(onGetDhlTrackingSucceeded(response));\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        const { response } = error;\r\n        dispatch(onGetDhlTrackingFailed(response));\r\n        throw error;\r\n      });\r\n  };\r\n  ","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\FedexReducers.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\FedexActions.js",["136"],"import Instance from '../util/AxiosUtil';\r\n\r\nexport const GET_FEDEX_TRACKING_STARTED = 'GET_FEDEX_TRACKING_STARTED';\r\nexport const GET_FEDEX_TRACKING_SUCCEEDED = 'GET_FEDEX_TRACKING_SUCCEEDED';\r\nexport const GET_FEDEX_TRACKING_FAILED = 'GET_FEDEX_TRACKING_FAILED';\r\n\r\nconst API_KEY = process.env.REACT_APP_FEDEX_API_USERNAME;\r\nconst fedexUrl ='https://wsbeta.fedex.com:443/web-services'\r\n\r\n\r\nconst onGetFedexTrackingStarted = () => ({\r\n  type: GET_FEDEX_TRACKING_STARTED,\r\n});\r\n\r\nconst onGetFedexTrackingSucceeded = response => ({\r\n  type: GET_FEDEX_TRACKING_SUCCEEDED,\r\n  response,\r\n});\r\n\r\nconst onGetFedexTrackingFailed = error => ({\r\n  type: GET_FEDEX_TRACKING_FAILED,\r\n  error,\r\n});\r\n\r\nexport const getFedexTracking = () => (dispatch) => {\r\n    dispatch(onGetFedexTrackingStarted());\r\n    return Instance.axiosInstance().get(fedexUrl)\r\n      .then((response) => {\r\n        dispatch(onGetFedexTrackingSucceeded(response));\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        const { response } = error;\r\n        dispatch(onGetFedexTrackingFailed(response));\r\n        throw error;\r\n      });\r\n  };\r\n  ","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\components\\Snackbar.jsx",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\SnackbarActions.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\SnackbarReducers.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\aws-exports.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\TrackingActions.js",["137"],"import { API, graphqlOperation  } from 'aws-amplify';\r\nimport * as queries from '../graphql/queries';\r\nimport * as mutations from '../graphql/mutations';\r\nimport Instance from '../util/AxiosUtil';\r\n\r\n//queries\r\nexport const GET_TRACKING_STARTED = 'GET_TRACKING_STARTED';\r\nexport const GET_TRACKING_SUCCEEDED = 'GET_TRACKING_SUCCEEDED';\r\nexport const GET_TRACKING_FAILED = 'GET_TRACKING_FAILED';\r\n\r\n//mutations\r\nexport const CREATE_TRACKING_STARTED = 'CREATE_TRACKING_STARTED';\r\nexport const CREATE_TRACKING_SUCCEEDED = 'CREATE_TRACKING_SUCCEEDED';\r\nexport const CREATE_TRACKING_FAILED = 'CREATE_TRACKING_FAILED';\r\n\r\nexport const UPDATE_TRACKING_STARTED = 'UPDATE_TRACKING_STARTED';\r\nexport const UPDATE_TRACKING_SUCCEEDED = 'UPDATE_TRACKING_SUCCEEDED';\r\nexport const UPDATE_TRACKING_FAILED = 'UPDATE_TRACKING_FAILED';\r\n\r\nexport const DELETE_TRACKING_STARTED = 'DELETE_TRACKING_STARTED';\r\nexport const DELETE_TRACKING_SUCCEEDED = 'DELETE_TRACKING_SUCCEEDED';\r\nexport const DELETE_TRACKING_FAILED = 'DELETE_TRACKING_FAILED';\r\n\r\n\r\nconst onCreateTrackingStarted = () => ({\r\n    type: CREATE_TRACKING_STARTED,\r\n  });\r\n  \r\n  const onCreateTrackingSucceeded = response => ({\r\n    type: CREATE_TRACKING_SUCCEEDED,\r\n    response,\r\n  });\r\n  \r\n  const onCreateTrackingFailed = error => ({\r\n    type: CREATE_TRACKING_FAILED,\r\n    error,\r\n  });\r\n\r\nconst onGetTrackingStarted = () => ({\r\n    type: GET_TRACKING_STARTED,\r\n  });\r\n  \r\n  const onGetTrackingSucceeded = response => ({\r\n    type: GET_TRACKING_SUCCEEDED,\r\n    response,\r\n  });\r\n  \r\n  const onGetTrackingFailed = error => ({\r\n    type: GET_TRACKING_FAILED,\r\n    error,\r\n  });\r\n\r\n  const onUpdateTrackingStarted = () => ({\r\n    type: UPDATE_TRACKING_STARTED,\r\n  });\r\n  \r\n  const onUpdateTrackingSucceeded = response => ({\r\n    type: UPDATE_TRACKING_SUCCEEDED,\r\n    response,\r\n  });\r\n  \r\n  const onUpdateTrackingFailed = error => ({\r\n    type: UPDATE_TRACKING_FAILED,\r\n    error,\r\n  });\r\n\r\n  const onDeleteTrackingStarted = () => ({\r\n    type: DELETE_TRACKING_STARTED,\r\n  });\r\n  \r\n  const onDeleteTrackingSucceeded = response => ({\r\n    type: DELETE_TRACKING_SUCCEEDED,\r\n    response,\r\n  });\r\n  \r\n  const onDeleteTrackingFailed = error => ({\r\n    type: DELETE_TRACKING_FAILED,\r\n    error,\r\n  });\r\n\r\n  \r\n  export const createTracking = (userID, carrier, trackingNumber, trackingSummary,) => (dispatch) => {\r\n    const variables = {\r\n      \"userID\": userID,\r\n      \"carrier\": carrier,\r\n      \"trackingNumber\": trackingNumber,\r\n      \"trackingSummary\": trackingSummary,\r\n    };\r\n\r\n    dispatch(onCreateTrackingStarted());\r\n    //no use of axiosInstance?\r\n    return API.graphql(graphqlOperation(mutations.createTrackingNumber, variables))\r\n      .then((response) => {\r\n        dispatch(onCreateTrackingSucceeded(response));\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        const { response } = error;\r\n        dispatch(onCreateTrackingFailed(response));\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  export const getTracking = (userID) => (dispatch) => {\r\n      dispatch(onGetTrackingStarted());\r\n\r\n      const variables = {\r\n        \"userID\": userID\r\n      };\r\n\r\n      //no use of axiosInstance?\r\n      return API.graphql(graphqlOperation(queries.getTrackingNumbersByUser, variables))\r\n        .then((response) => {\r\n          dispatch(onGetTrackingSucceeded(response));\r\n          return response;\r\n        })\r\n        .catch((error) => {\r\n          const { response } = error;\r\n          dispatch(onGetTrackingFailed(response));\r\n          throw error;\r\n        });\r\n    };\r\n\r\n    export const updateTracking = (id, trackingSummary, userNotes) => (dispatch) => {\r\n      const variables = {\r\n        \"id\": id,\r\n        ...trackingSummary && { \"trackingSummary\": trackingSummary},\r\n        ...userNotes && { \"userNotes\": userNotes},\r\n      };   \r\n\r\n      dispatch(onUpdateTrackingStarted());\r\n      //no use of axiosInstance?\r\n      return API.graphql(graphqlOperation(mutations.updateTrackingNumber, variables))\r\n        .then((response) => {\r\n          dispatch(onUpdateTrackingSucceeded(response));\r\n          return response;\r\n        })\r\n        .catch((error) => {\r\n          const { response } = error;\r\n          dispatch(onUpdateTrackingFailed(response));\r\n          throw error;\r\n        });\r\n    };\r\n    \r\n    export const deleteTracking = (id) => (dispatch) => {\r\n      const variables = {\r\n        \"id\": id,\r\n      };\r\n  \r\n      dispatch(onDeleteTrackingStarted());\r\n      //no use of axiosInstance?\r\n      return API.graphql(graphqlOperation(mutations.deleteTrackingNumber, variables))\r\n        .then((response) => {\r\n          dispatch(onDeleteTrackingSucceeded(response));\r\n          return response;\r\n        })\r\n        .catch((error) => {\r\n          const { response } = error;\r\n          dispatch(onDeleteTrackingFailed(response));\r\n          throw error;\r\n        });\r\n    };\r\n    ","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\graphql\\queries.js",[],["138","139"],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\TrackingReducers.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\graphql\\mutations.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\components\\Row.jsx",["140","141","142","143","144"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {makeStyles, \r\n    TextField,\r\n    IconButton, \r\n    Box,\r\n    Typography, \r\n    Table, \r\n    TableRow, \r\n    TableCell, \r\n    TableBody, \r\n    Collapse,\r\n    Tooltip,\r\n    Grid, } from '@material-ui/core';\r\n\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\nimport Snackbar from '../components/Snackbar';\r\n\r\n//actions\r\nimport { updateTracking } from '../actions/TrackingActions';\r\nimport { showInfoSnackbar, showErrorSnackbar } from '../actions/SnackbarActions';\r\n\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  table_row: {\r\n  \r\n  }\r\n  }));\r\n\r\n  const Row = (props) => {\r\n    const {\r\n      row= {\r\n        id: '',\r\n        carrier:'',\r\n        trackingSummary:[\"N/A\"],\r\n        trackingNumber: \"N/A\",\r\n        userNotes:\"N/A\",\r\n        }, \r\n      index, \r\n      handleDelete, } = props;\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [editEnabled, setEdit] = useState(false);\r\n    const [userNotesInput, setUserNotesInput] = useState(row.userNotes || '');\r\n \r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleEdit = (id, trackingSummary, userNotes, index) => {\r\n      dispatch(updateTracking(id, trackingSummary,  userNotes))\r\n    }\r\n    \r\n\r\n    return(\r\n      <React.Fragment>\r\n        <TableRow key={row.id} className={classes.table_row}>\r\n          <TableCell>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell id={`${row.trackingNumber}_carrier`}>{row.carrier}</TableCell>\r\n          <TableCell id={`${row.trackingNumber}_number`}>{row.trackingNumber}</TableCell>\r\n          <TableCell id={`${row.trackingNumber}_summary`}>{row.trackingSummary && row.trackingSummary[0]}</TableCell>\r\n          <TableCell>\r\n            <TextField disabled={!editEnabled} id={`usernotes_input_${row.trackingNumber}`} value={userNotesInput}  onChange={e => setUserNotesInput(e.target.value)} variant=\"outlined\"/>        \r\n          </TableCell>\r\n          <TableCell>\r\n            {editEnabled ? (\r\n               <Tooltip title=\"Save Notes\" arrow>\r\n                <IconButton onClick={(e)=>{\r\n                                            handleEdit(row.id, row.trackingSummary, userNotesInput, index); \r\n                                            setEdit(false)\r\n                                          }}>\r\n                  <SaveIcon/>\r\n                </IconButton>\r\n               </Tooltip>\r\n              ) : (\r\n              <Tooltip title=\"Edit Notes\" arrow>\r\n              <IconButton onClick={(e)=>setEdit(true)}>\r\n                <EditIcon/>\r\n              </IconButton>\r\n              </Tooltip>\r\n              )\r\n            }\r\n            <Tooltip title=\"Delete Tracking Number\" arrow>\r\n              <IconButton onClick={handleDelete}>\r\n                <CloseIcon/>\r\n              </IconButton>\r\n            </Tooltip>\r\n          </TableCell>\r\n        </TableRow>\r\n      \r\n        <TableRow>\r\n      <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n          <Box margin={1}>\r\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n              Detailed History\r\n            </Typography>\r\n\r\n            <Table size=\"small\" aria-label=\"tracking details\">\r\n              {!row.trackingSummary? \r\n                ( \r\n                   <TableBody>\r\n                   <TableRow>\r\n                     <TableCell> History is unavailable for this shipment. </TableCell>\r\n                   </TableRow>\r\n                 </TableBody>\r\n                ) : (\r\n                  <TableBody>\r\n                    {row.trackingSummary.map((item, index) => (\r\n                      <TableRow >\r\n                        <TableCell key={row.trackingNumber+'_'+index}>{item}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                )}\r\n            </Table>\r\n          </Box>\r\n        </Collapse>\r\n      </TableCell>\r\n    </TableRow>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\nexport default Row","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\components\\InputButton.jsx",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":3,"column":32,"nodeType":"151","messageId":"152","endLine":3,"endColumn":46},{"ruleId":"149","severity":1,"message":"153","line":3,"column":78,"nodeType":"151","messageId":"152","endLine":3,"endColumn":95},{"ruleId":"149","severity":1,"message":"154","line":16,"column":9,"nodeType":"151","messageId":"152","endLine":16,"endColumn":18},{"ruleId":"149","severity":1,"message":"155","line":17,"column":9,"nodeType":"151","messageId":"152","endLine":17,"endColumn":15},{"ruleId":"149","severity":1,"message":"156","line":84,"column":7,"nodeType":"151","messageId":"152","endLine":84,"endColumn":18},{"ruleId":"149","severity":1,"message":"157","line":118,"column":12,"nodeType":"151","messageId":"152","endLine":118,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":125,"column":8,"nodeType":"160","endLine":125,"endColumn":10,"suggestions":"161"},{"ruleId":"158","severity":1,"message":"162","line":158,"column":8,"nodeType":"160","endLine":158,"endColumn":29,"suggestions":"163"},{"ruleId":"158","severity":1,"message":"164","line":215,"column":8,"nodeType":"160","endLine":215,"endColumn":37,"suggestions":"165"},{"ruleId":"158","severity":1,"message":"166","line":226,"column":8,"nodeType":"160","endLine":226,"endColumn":41,"suggestions":"167"},{"ruleId":"149","severity":1,"message":"168","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":17},{"ruleId":"149","severity":1,"message":"169","line":4,"column":7,"nodeType":"151","messageId":"152","endLine":4,"endColumn":18},{"ruleId":"149","severity":1,"message":"170","line":5,"column":7,"nodeType":"151","messageId":"152","endLine":5,"endColumn":18},{"ruleId":"149","severity":1,"message":"171","line":7,"column":7,"nodeType":"151","messageId":"152","endLine":7,"endColumn":14},{"ruleId":"149","severity":1,"message":"171","line":7,"column":7,"nodeType":"151","messageId":"152","endLine":7,"endColumn":14},{"ruleId":"149","severity":1,"message":"172","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":16},{"ruleId":"145","replacedBy":"173"},{"ruleId":"147","replacedBy":"174"},{"ruleId":"149","severity":1,"message":"175","line":1,"column":26,"nodeType":"151","messageId":"152","endLine":1,"endColumn":35},{"ruleId":"149","severity":1,"message":"176","line":15,"column":5,"nodeType":"151","messageId":"152","endLine":15,"endColumn":9},{"ruleId":"149","severity":1,"message":"177","line":24,"column":8,"nodeType":"151","messageId":"152","endLine":24,"endColumn":16},{"ruleId":"149","severity":1,"message":"178","line":28,"column":10,"nodeType":"151","messageId":"152","endLine":28,"endColumn":26},{"ruleId":"149","severity":1,"message":"179","line":28,"column":28,"nodeType":"151","messageId":"152","endLine":28,"endColumn":45},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'AmplifySignOut' is defined but never used.","Identifier","unusedVar","'withAuthenticator' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'usePrevious' is assigned a value but never used.","'testState1' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["182"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["183"],"React Hook useEffect has missing dependencies: 'dispatch', 'lastAdded.carrier', 'lastAdded.trackingNumber', 'trackingNumberList', and 'userId'. Either include them or remove the dependency array. You can also do a functional update 'setTrackingNumberList(t => ...)' if you only need 'trackingNumberList' in the 'setTrackingNumberList' call.",["184"],"React Hook useEffect has a missing dependency: 'trackingNumberList'. Either include it or remove the dependency array.",["185"],"'isEmpty' is defined but never used.","'upsUsername' is assigned a value but never used.","'upsPassword' is assigned a value but never used.","'API_KEY' is assigned a value but never used.","'Instance' is defined but never used.",["180"],["181"],"'useEffect' is defined but never used.","'Grid' is defined but never used.","'Snackbar' is defined but never used.","'showInfoSnackbar' is defined but never used.","'showErrorSnackbar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [dispatch, userId]",{"range":"194","text":"195"},"Update the dependencies array to be: [dispatch, trackingNumberStore]",{"range":"196","text":"197"},"Update the dependencies array to be: [dispatch, lastAdded.carrier, lastAdded.trackingNumber, trackingNumberList, upsLastAdded, userId, uspsLastAdded]",{"range":"198","text":"199"},"Update the dependencies array to be: [createTrackingSucceededResponse, trackingNumberList]",{"range":"200","text":"201"},[3450,3452],"[dispatch, userId]",[4533,4554],"[dispatch, trackingNumberStore]",[7400,7429],"[dispatch, lastAdded.carrier, lastAdded.trackingNumber, trackingNumberList, upsLastAdded, userId, uspsLastAdded]",[7981,8014],"[createTrackingSucceededResponse, trackingNumberList]"]