[{"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reportWebVitals.js":"1","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\stylesheets\\theme.js":"2","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\store\\Store.js":"3","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\App.jsx":"4","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\index.jsx":"5","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\Router.jsx":"6","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\RootReducer.js":"7","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\containers\\Home.jsx":"8","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\UpsReducers.js":"9","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\UpsActions.js":"10","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\util\\AxiosUtil.js":"11","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\UspsReducers.js":"12","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\UspsActions.js":"13","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\DhlReducers.js":"14","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\DhlActions.js":"15","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\FedexReducers.js":"16","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\FedexActions.js":"17","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\components\\Snackbar.jsx":"18","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\SnackbarActions.js":"19","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\SnackbarReducers.js":"20","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\aws-exports.js":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":246,"mtime":1608268470133,"results":"24","hashOfConfig":"23"},{"size":833,"mtime":1608275624153,"results":"25","hashOfConfig":"23"},{"size":633,"mtime":1611838043606,"results":"26","hashOfConfig":"23"},{"size":605,"mtime":1611838036241,"results":"27","hashOfConfig":"23"},{"size":260,"mtime":1608275866139,"results":"28","hashOfConfig":"23"},{"size":391,"mtime":1611243801342,"results":"29","hashOfConfig":"23"},{"size":8196,"mtime":1611773424794,"results":"30","hashOfConfig":"23"},{"size":3161,"mtime":1611772984061,"results":"31","hashOfConfig":"23"},{"size":1110,"mtime":1609033985355,"results":"32","hashOfConfig":"23"},{"size":884,"mtime":1609037415989,"results":"33","hashOfConfig":"23"},{"size":1839,"mtime":1611739875258,"results":"34","hashOfConfig":"23"},{"size":1290,"mtime":1608625031007,"results":"35","hashOfConfig":"23"},{"size":1035,"mtime":1608869668154,"results":"36","hashOfConfig":"23"},{"size":1099,"mtime":1608789537507,"results":"37","hashOfConfig":"23"},{"size":1059,"mtime":1608869649168,"results":"38","hashOfConfig":"23"},{"size":1128,"mtime":1608889333930,"results":"39","hashOfConfig":"23"},{"size":3080,"mtime":1611248867186,"results":"40","hashOfConfig":"23"},{"size":1135,"mtime":1611243776906,"results":"41","hashOfConfig":"23"},{"size":1222,"mtime":1611243778041,"results":"42","hashOfConfig":"23"},{"size":734,"mtime":1611839311553,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1mxchas",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reportWebVitals.js",[],["93","94"],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\stylesheets\\theme.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\store\\Store.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\App.jsx",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\index.jsx",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\Router.jsx",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\RootReducer.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\containers\\Home.jsx",["95","96","97","98"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { isEmpty } from 'lodash';\r\n\r\nimport {makeStyles, \r\n        TextField, \r\n        Button,\r\n        Box,\r\n        Typography, \r\n        Table, \r\n        TableContainer, \r\n        TableHead, \r\n        TableRow, \r\n        TableCell, \r\n        TableBody, \r\n        IconButton,\r\n        Collapse,\r\n        Paper, } from '@material-ui/core';\r\n\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport Snackbar from '../components/Snackbar';\r\n\r\n//actions\r\nimport { getUpsTracking } from '../actions/UpsActions';\r\nimport { getUspsTracking } from '../actions/UspsActions';\r\nimport { showInfoSnackbar, showErrorSnackbar } from '../actions/SnackbarActions';\r\n\r\nlet ups_regex_pattern=[\r\n  '^(1Z)[0-9A-Z]{16}$',\r\n  '^(T)+[0-9A-Z]{10}$',\r\n  '^[0-9]{9}$',\r\n  '^[0-9]{26}$'\r\n];\r\n\r\nlet usps_regex_pattern=[\r\n  '^(94|93|92|94|95)[0-9]{20}$',\r\n  '^(94|93|92|94|95)[0-9]{22}$',\r\n  '^(70|14|23|03)[0-9]{14}$',\r\n  '^(M0|82)[0-9]{8}$',\r\n  '^([A-Z]{2})[0-9]{9}([A-Z]{2})$'\r\n];\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  home_container: {\r\n    margin: 'auto',\r\n    textAlign: 'center',\r\n  }\r\n}));\r\n\r\nconst usePrevious = (value) => {\r\n  const ref = useRef();\r\n\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n  \r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const uspsTracking = useSelector(state => state.uspsReducers.uspsTracking);\r\n    const uspsLastAdded = useSelector(state => state.uspsReducers.uspsLastAdded);\r\n\r\n    const upsTracking = useSelector(state => state.upsReducers.upsTracking);\r\n    const upsLastAdded = useSelector(state => state.upsReducers.upsLastAdded);\r\n\r\n    const [textInput, setTextInput] = useState('');\r\n    const [trackingNumberList, setTrackingNumberList] = useState([]);\r\n    const [lastAddedCarrier, setLastAddedCarrier] = useState('');\r\n    const prevTextInput = usePrevious(textInput);\r\n\r\n    //didMount\r\n    useEffect(()=>{\r\n      // didMount pull saved tracking numbers from future backend\r\n    }, []);\r\n\r\n\r\n    //didUpdate\r\n    useEffect(()=>{\r\n      let lastAddedTrackingNumber; //const or let\r\n      //  prevTextInput used incase api returns null for id\r\n      switch(lastAddedCarrier){ //put this in prevprops? on state update, followed by setTrackingNumbers() if that state \r\n        case 'UPS':\r\n          lastAddedTrackingNumber={ \r\n                                    carrier: upsLastAdded.carrier,\r\n                                    id: upsLastAdded.id || prevTextInput,\r\n                                    trackingSummary: upsLastAdded.trackingSummary[0],\r\n                                    history: upsLastAdded.trackingSummary.slice(1),\r\n                                  }\r\n          break;\r\n        case 'USPS':\r\n          lastAddedTrackingNumber={ \r\n                                    carrier: uspsLastAdded.carrier,\r\n                                    id: uspsLastAdded.id || prevTextInput,\r\n                                    trackingSummary: uspsLastAdded.trackingSummary[0],\r\n                                    history: uspsLastAdded.trackingSummary.slice(1),\r\n                                  }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if(lastAddedTrackingNumber){\r\n        setTrackingNumberList([lastAddedTrackingNumber, ...trackingNumberList]);\r\n      }\r\n    }, [upsLastAdded, uspsLastAdded]); \r\n\r\n    const findTracking = () => {\r\n      if(textInput === ''){\r\n        dispatch(showErrorSnackbar('No tracking number entered.'));\r\n      } else if(trackingNumberList.find(trackingNumber => trackingNumber.id === textInput)){\r\n        dispatch(showErrorSnackbar(\"You've already entered this number! Please enter a new tracking number.\"));\r\n      } else {\r\n        // dispatch(getUpsTracking(textInput));\r\n        //1Z5338FF0107231059\r\n        //1Z75AR481395060710\r\n        // dispatch(getUspsTracking(textInput));\r\n        // dispatch(getUspsTracking('9405509202348003831398'));\r\n\r\n        const match = (pattern) => {\r\n          const regex = new RegExp(pattern);\r\n          return regex.test(textInput);\r\n        };\r\n\r\n        if(ups_regex_pattern.some(match)){\r\n          setLastAddedCarrier('UPS');\r\n          dispatch(getUpsTracking(textInput));\r\n          dispatch(showInfoSnackbar('Tracking Added!'));\r\n        }\r\n\r\n        else if(usps_regex_pattern.some(match)){\r\n            setLastAddedCarrier('USPS');\r\n            dispatch(getUspsTracking(textInput));\r\n            dispatch(showInfoSnackbar('Tracking Added!'));\r\n        }\r\n\r\n        else{\r\n          dispatch(showErrorSnackbar('Tracking Not Found'));\r\n        }\r\n\r\n      }\r\n    };\r\n\r\n    const Row = (props) => {\r\n      const { row } = props;\r\n      const [open, setOpen] = useState(false);\r\n\r\n      return(\r\n        <React.Fragment>\r\n          <TableRow>\r\n            <TableCell>\r\n              <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell>{row.carrier}</TableCell>\r\n            <TableCell>{row.id}</TableCell>\r\n            <TableCell>{row.trackingSummary}</TableCell>\r\n          </TableRow>\r\n        \r\n          <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                History\r\n              </Typography>\r\n\r\n              <Table size=\"small\" aria-label=\"tracking details\">\r\n                {/* <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Details</TableCell>\r\n                  </TableRow>\r\n                </TableHead> */}\r\n\r\n                {row.history.length > 0 ? \r\n                  ( \r\n                    <TableBody>\r\n                      {row.history.map((historyRow) => (\r\n                        <TableRow >\r\n                          <TableCell>{historyRow}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  ) : (\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell> History is unavailable for this shipment. </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  )}\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n\r\n    return (\r\n    <div className={classes.home_container}>   \r\n      <div>\r\n        <h1>MailTracker</h1> \r\n      </div> \r\n      <div>\r\n        <form>\r\n          <TextField \r\n            variant=\"outlined\" \r\n            label='Tracking Number' \r\n            placeholder='Input tracking number here!' \r\n            value={textInput}\r\n            onChange={e => setTextInput(e.target.value)}\r\n          />\r\n          <br/>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={findTracking}>\r\n            Track Package!\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell/>\r\n                <TableCell>Carrier</TableCell>\r\n                <TableCell>Tracking Number</TableCell>\r\n                <TableCell> Tracking Summary</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {trackingNumberList.map((row) => (\r\n                  <Row key={row.id} row={row}/>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n      <Snackbar/>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\UpsReducers.js",["99"],"import { isEmpty } from 'lodash';\r\n\r\nimport {\r\n    GET_UPS_TRACKING_STARTED,\r\n    GET_UPS_TRACKING_SUCCEEDED,\r\n    GET_UPS_TRACKING_FAILED,\r\n  } from '../actions/UpsActions';\r\n\r\n  const defaultState = {\r\n   upsTracking: [],\r\n   upsLastAdded: {},\r\n  };\r\n\r\n  const UpsReducer = (state = defaultState, action) => {\r\n    Object.freeze(state);\r\n    let newState;\r\n    switch (action.type) {\r\n      case  GET_UPS_TRACKING_STARTED:\r\n        newState = {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n        return newState;\r\n      case GET_UPS_TRACKING_SUCCEEDED:\r\n        let data = action.response.data;\r\n        let currentTracking = data.trackResponse.shipment[0].hasOwnProperty('warnings') ? \r\n          {\r\n            carrier:'UPS',\r\n            id: '', //should this have the error id?\r\n            trackingSummary: [data.trackResponse.shipment[0].warnings[0].message, ],\r\n          } \r\n          :\r\n          {\r\n            carrier: 'UPS',\r\n            id: data.trackResponse.shipment[0].package[0].trackingNumber, \r\n          // trackingSummary:  data.trackResponse.shipment[0].hasOwnProperty('package') ? `${data.trackResponse.shipment[0].package[0].activity[0].status.description + ' at ' +\r\n          //                   data.trackResponse.shipment[0].package[0].activity[0].location.address.city +  ', ' + \r\n          //                   data.trackResponse.shipment[0].package[0].activity[0].location.address.stateProvince}` : 'not found',\r\n            trackingSummary: data.trackResponse.shipment[0].package[0].activity.map(activity => {\r\n                                                                                                  let status = activity.status.description;\r\n                                                                                                  let date =`${activity.date? ' ' : ''}` + activity.date + \r\n                                                                                                            `${activity.time? ', ' : ''}` + activity.time; \r\n                                                                                                  let location =`${activity.location.address.city? ', ' : ''}` + activity.location.address.city + \r\n                                                                                                                `${activity.location.address.stateProvince? ', ' : ''}` + activity.location.address.stateProvince;\r\n                                                                                                  return status + date + location;\r\n                                                                                                }),\r\n          }\r\n        newState = {\r\n          ...state,\r\n          isLoading: false,\r\n          upsTracking: [...state.upsTracking, currentTracking],\r\n          upsLastAdded: currentTracking,\r\n        };\r\n        return newState;\r\n      case  GET_UPS_TRACKING_FAILED:\r\n        newState = {\r\n          ...state,\r\n          isLoading: false,\r\n          error: action.message,\r\n        };\r\n        return newState;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  \r\n  export default UpsReducer;","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\UpsActions.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\util\\AxiosUtil.js",["100","101"],"import axios from 'axios';\r\n\r\nconst upsKey = process.env.REACT_APP_UPS_API_KEY;\r\nconst upsUsername = process.env.REACT_APP_UPS_USERNAME;\r\nconst upsPassword = process.env.REACT_APP_UPS_PASSWORD;\r\n\r\n//need instance for json and xml\r\nconst Instance = {\r\n  axiosInstance(contentType = 'application/json') {\r\n    const instance = axios.create({\r\n      timeout: 15000,\r\n      headers: this.getHeader(contentType),\r\n    });\r\n    return instance;\r\n  },\r\n  getHeader(contentType = 'application/json') {\r\n    const API_HEADER = {\r\n      'Content-Type': contentType,\r\n      // 'DHL-API-Key': process.env.REACT_APP_DHL_API_USERNAME,\r\n      'transId': '12345',\r\n      'transactionSrc': 'MailTracker',\r\n      'AccessLicenseNumber': `${upsKey}`,\r\n      // 'Username': `${upsUsername}`,\r\n      // 'Password': `${upsPassword}`,\r\n\r\n    };\r\n    return API_HEADER;\r\n  },\r\n};\r\n\r\nexport default Instance;\r\n","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\UspsReducers.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\UspsActions.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\DhlReducers.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\DhlActions.js",["102"],"import Instance from '../util/AxiosUtil';\r\n\r\nexport const GET_DHL_TRACKING_STARTED = 'GET_DHL_TRACKING_STARTED';\r\nexport const GET_DHL_TRACKING_SUCCEEDED = 'GET_DHL_TRACKING_SUCCEEDED';\r\nexport const GET_DHL_TRACKING_FAILED = 'GET_DHL_TRACKING_FAILED';\r\n\r\nconst API_KEY = process.env.REACT_APP_DHL_API_USERNAME;\r\nconst dhlUrl ='api.dhl.com/dgff/transportation'\r\n\r\nconst onGetDhlTrackingStarted = () => ({\r\n  type: GET_DHL_TRACKING_STARTED,\r\n});\r\n\r\nconst onGetDhlTrackingSucceeded = response => ({\r\n  type: GET_DHL_TRACKING_SUCCEEDED,\r\n  response,\r\n});\r\n\r\nconst onGetDhlTrackingFailed = error => ({\r\n  type: GET_DHL_TRACKING_FAILED,\r\n  error,\r\n});\r\n\r\nexport const getDhlTracking = () => (dispatch) => {\r\n    dispatch(onGetDhlTrackingStarted());\r\n    return Instance.axiosInstance().get(dhlUrl+'/shipment-tracking')\r\n      .then((response) => {\r\n        dispatch(onGetDhlTrackingSucceeded(response));\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        const { response } = error;\r\n        dispatch(onGetDhlTrackingFailed(response));\r\n        throw error;\r\n      });\r\n  };\r\n  ","C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\FedexReducers.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\FedexActions.js",["103"],"import Instance from '../util/AxiosUtil';\r\n\r\nexport const GET_FEDEX_TRACKING_STARTED = 'GET_FEDEX_TRACKING_STARTED';\r\nexport const GET_FEDEX_TRACKING_SUCCEEDED = 'GET_FEDEX_TRACKING_SUCCEEDED';\r\nexport const GET_FEDEX_TRACKING_FAILED = 'GET_FEDEX_TRACKING_FAILED';\r\n\r\nconst API_KEY = process.env.REACT_APP_FEDEX_API_USERNAME;\r\nconst fedexUrl ='https://wsbeta.fedex.com:443/web-services'\r\n\r\n\r\nconst onGetFedexTrackingStarted = () => ({\r\n  type: GET_FEDEX_TRACKING_STARTED,\r\n});\r\n\r\nconst onGetFedexTrackingSucceeded = response => ({\r\n  type: GET_FEDEX_TRACKING_SUCCEEDED,\r\n  response,\r\n});\r\n\r\nconst onGetFedexTrackingFailed = error => ({\r\n  type: GET_FEDEX_TRACKING_FAILED,\r\n  error,\r\n});\r\n\r\nexport const getFedexTracking = () => (dispatch) => {\r\n    dispatch(onGetFedexTrackingStarted());\r\n    return Instance.axiosInstance().get(fedexUrl)\r\n      .then((response) => {\r\n        dispatch(onGetFedexTrackingSucceeded(response));\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        const { response } = error;\r\n        dispatch(onGetFedexTrackingFailed(response));\r\n        throw error;\r\n      });\r\n  };\r\n  ",["104","105"],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\components\\Snackbar.jsx",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\actions\\SnackbarActions.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\reducers\\SnackbarReducers.js",[],"C:\\Users\\Frank Wei\\Documents\\Dev\\mailtracker\\src\\aws-exports.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":17},{"ruleId":"110","severity":1,"message":"114","line":68,"column":11,"nodeType":"112","messageId":"113","endLine":68,"endColumn":23},{"ruleId":"110","severity":1,"message":"115","line":71,"column":11,"nodeType":"112","messageId":"113","endLine":71,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":112,"column":8,"nodeType":"118","endLine":112,"endColumn":37,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":17},{"ruleId":"110","severity":1,"message":"120","line":4,"column":7,"nodeType":"112","messageId":"113","endLine":4,"endColumn":18},{"ruleId":"110","severity":1,"message":"121","line":5,"column":7,"nodeType":"112","messageId":"113","endLine":5,"endColumn":18},{"ruleId":"110","severity":1,"message":"122","line":7,"column":7,"nodeType":"112","messageId":"113","endLine":7,"endColumn":14},{"ruleId":"110","severity":1,"message":"122","line":7,"column":7,"nodeType":"112","messageId":"113","endLine":7,"endColumn":14},{"ruleId":"106","replacedBy":"123"},{"ruleId":"108","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'isEmpty' is defined but never used.","Identifier","unusedVar","'uspsTracking' is assigned a value but never used.","'upsTracking' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'lastAddedCarrier', 'prevTextInput', and 'trackingNumberList'. Either include them or remove the dependency array. You can also do a functional update 'setTrackingNumberList(t => ...)' if you only need 'trackingNumberList' in the 'setTrackingNumberList' call.","ArrayExpression",["127"],"'upsUsername' is assigned a value but never used.","'upsPassword' is assigned a value but never used.","'API_KEY' is assigned a value but never used.",["125"],["126"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [lastAddedCarrier, prevTextInput, trackingNumberList, upsLastAdded, uspsLastAdded]",{"range":"130","text":"131"},[3700,3729],"[lastAddedCarrier, prevTextInput, trackingNumberList, upsLastAdded, uspsLastAdded]"]